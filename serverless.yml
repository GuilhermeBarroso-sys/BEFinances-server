service: aws-node-http-api-project
plugins:
  - serverless-esbuild
  - serverless-offline
  

provider:
  name: aws
  runtime: nodejs16.x
  region: 'sa-east-1'
  environment: ${file(./env.yml)}


custom:
  esbuild:
    bundle: true
    minify: true
    watch:
      pattern: ['./','src/**/*.ts']
package: 
  individually: true
  patterns:
    - '!node_modules/.prisma/client/libquery_engine-*'
    - 'node_modules/.prisma/client/libquery_engine-rhel-*'
    - 'node_modules/.prisma/client/libquery_engine-debian-*'
    - 'node_modules/.prisma/client/libquery_engine-darwin*'
    - '!node_modules/prisma/libquery_engine-*'
    - 'node_modules/.prisma/client/schema.prisma'

functions:
  
  findUser:
    handler: src/routes/users/index.findUser
    events:
      - httpApi:
          path: /users/{userId}
          method: get

  authenticateUser:
    handler: src/routes/users/index.authenticateUser
    events:
      - httpApi:
          path: /users/authenticate
          method: post

  createUser:
      handler: src/routes/users/index.createUser
      events:
        - httpApi:
            path: /users
            method: post

  findAllTransactions:
    handler: src/routes/transactions/index.findAllTransactionsByUserId
    events:
      - httpApi:
          path: /users/transactions/{userId}
          method: get
          
  createTransaction:
    handler: src/routes/transactions/index.createTransaction
    events:
      - httpApi:
          path: /users/transactions
          method: post

  createBudget:
    handler: src/routes/budgets/index.createBudget
    events:
      - httpApi:
          path: /users/budgets
          method: post
  
  findBudget:
    handler: src/routes/budgets/index.findBudget
    events:
      - httpApi:
          path: /users/budgets/{userId}
          method: get
